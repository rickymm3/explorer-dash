#!/bin/sh

export NODE_ENV=production
export NODE_MODS="/home/ec2-user/local/lib/node_modules"

now=$(date +"%T")

. colors

# test

logRed() {
	echo "${CLR_RED}$1${CLR_NORMAL}"
}

logGreen() {
	echo "${CLR_GREEN}$1${CLR_NORMAL}"
}

logYellow() {
	echo "${CLR_YELLOW}$1${CLR_NORMAL}"
}

confirm() {
	echo $1
	echo "y: Yes [ENTER]"
	echo "n: No  [ESCAPE]"
	read -s -n1 SEL
	
	case $SEL in
		$'\e') exit ;;
		n) exit ;;
		*) ;;
	esac
}

checkIsRoot() {
	if [ "$EUID" -ne 0 ]
	  then logRed "Please run as root (with 'sudo')"
	  exit 1
	fi
}

checkOK() {
	isOK=1
	appJS="$projectPath/app.js"
	projJS="$projectPath/$projectName.js"
	
	if [ ! -f "$appJS" ]; then
	  # logYellow "Missing \"$appJS\" file! Trying $projectName.js instead..."
	  
	  if [ ! -f "$projJS" ]; then
		logRed "Missing \"$projJS\" file!"
		isOK=0
	  else
		appJS="$projJS"
	  fi
	fi
	
	# logYellow "App JS found: $appJS"
	
	if [ ! -f "package.json" ]; then
	  logRed "Missing \"$projectPath/package.json\" file!"
	  isOK=0
	fi

	if [ ! -d ".git" ]; then
	  logRed "Missing \"$projectPath/.git\" directory!"
	  isOK=0
	fi

	if [ $isOK == 0 ]; then
		exit 1
	fi
}

stop() {
	checkOK
	logRed " ... Stopping ($appJS) ..."
	# Redis-Server
	# redis-cli -p 6969 shutdown > /dev/null
	pm2 stop $appJS > /dev/null
	logRed "--STOPPED--"
}

start() {
	checkOK
	logGreen " ... Starting ($appJS) ..."
	# Redis-Server (port 6969)
	# redis-server redis.conf --port 6969 > /dev/null
	pm2 start $appJS > /dev/null
	logGreen "--STARTED--"
}

mongoRestart() {
	checkIsRoot
	service mongod restart
}

if [ "$1" == "mongo" ]; then
	mongoRestart
	exit 1
fi

if [ "$1" == "link" ]; then
	if [ "$2" == "" ]; then
		logRed "Must specify node-module to register & link."
		exit 1
	fi
	
	logGreen "Registering & Linking existing ERDS node_module: ${CLR_YELLOW}$2"
	logRed "$NODE_MODS/$2"
	
	MOD_PATH="$NODE_MODS/$2"
	
	if [ ! -f MOD_PATH ]; then
	  logGreen "Installing $2 globally..."
	  npm install -g $2
	fi
	
	curDir=$PWD
	cd $MOD_PATH
	
	#Register through YARN
	yarn link > /dev/null
	
	cd $curDir && yarn link "$2" > /dev/null
	
	exit 1
fi

projectPath="/node-dev/$2"
projectName="$(basename $PWD)"

if [ "$2" == "" ]
then
	projectPath=$PWD
fi

if [ ! -d "$projectPath" ]; then
	logRed "NodeJS Project Directory does not exists! $projectPath"
	exit 1
fi

cd $projectPath
logGreen "Current Dir is now: $PWD"

if [ "$projectPath" != "$ERDS" ]; then
	confirm "Continue with this directory?"
fi

# Here's the switch statement:
case $1 in
	"test") logYellow "Testing..." ;;
	"logs")
		checkOK
		logYellow "$projectName"
		pm2 logs "$projectName" --lines 30
		;;
	"stop") stop ;;
	"stopall")
		stop
		pm2 stop all ;;
	"start") start ;;
	"push")
		echo "Pulling first..."
                git pull
		echo "Adding, Committing and Pushing to origin 'master'..."
		git add -A
		git commit -m "Pushed from server at $now"
		git push origin
		logYellow "Pushed all server changes to Master."
		;;
	"pull")
		stop
		git pull > /dev/null
		yarn > /dev/null
		start ;;
	*)
		stop
		start ;;
esac
